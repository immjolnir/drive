syntax = "proto3";

package proto.tutorial;

import "proto/common/timestamp.proto";

message Quaternion {
    double qw = 1;
    double qx = 2;
    double qy = 3;
    double qz = 4;
}

message CalibrationRefine {
    string sensor_name = 1;
    Quaternion rotation = 2;
}

message Motion { // World frame
    double x = 1;
    double y = 2;
    double z = 3;
    double yaw = 4;
    double vx = 5;
    double vy = 6;
}

message Obstacle {
    int32 id = 1;

    // position of objects in image coordinates
    float image_cx = 2;
    float image_cy = 3;
    float box_width = 4;
    float box_height = 5;

    Motion motion = 6;
}

// Installation error calibration
// The installation error model of the gyroscope integrated is analyzed, and then error calibration model of flexible gyroscope integrated is deduced when malalignment Angle is considered.
// 从挠性陀螺组合安装误差模型入手，推导出存在轴不对准角情况下的挠性陀螺组合静态误差标定模型，并给出静态误差标定的位置试验方案。
message SensorInstallationError {
    double imu_to_ground = 1;
    double imu_to_front_bumper = 2;

    // Explicit default values are not allowed in proto3.
    // https://stackoverflow.com/questions/33222551/why-are-there-no-custom-default-values-in-proto3
    // Euler Angles of IMU frame to vehicle frame
    double imu_to_vehicle_roll = 3;
    double imu_to_vehicle_pitch = 4;
    double imu_to_vehicle_yaw = 5;
}

message ObstacleArray {
    proto.common.Timestamp timestamp = 1;
    // Note: it is the singular noun instead of plural.
    // This will make the generated method more readable.
    // int obstacle_size() const;
    // ::proto::tutorial::Obstacle* add_obstacle();
    // ::proto::tutorial::Obstacle* mutable_obstacle(int index);
    repeated Obstacle obstacle = 2;
    repeated CalibrationRefine calib_refine = 3;
}

